{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vemt\\\\Projects\\\\Simple_projects\\\\quiz_socket_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [availableRooms, setAvailableRooms] = useState([]);\n  const [roomName, setRoomName] = useState('');\n  const [isCreatingRoom, setIsCreatingRoom] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const io = require('socket.io-client');\n    const socket = io.connect('http://localhost:8885');\n    setSocket(socket);\n    socket.on('connect', () => {\n      console.log('Connected to Socket.io server');\n      console.log('Time: ' + new Date().toUTCString());\n      console.log(socket.id);\n    });\n    socket.on('availableRoom', data => {\n      console.log('Available Rooms:');\n      console.log(data.availableRooms);\n      if (data.availableRooms && data.availableRooms.length > 0) {\n        setAvailableRooms(data.availableRooms);\n      } else {\n        setIsCreatingRoom(true);\n      }\n    });\n    return () => {\n      // Clean up the socket.io connection when the component unmounts\n      socket.disconnect();\n    };\n  }, []);\n  const handleCreateRoom = () => {\n    setIsCreatingRoom(true);\n  };\n  const handleJoinRoom = () => {\n    const room = {\n      roomName\n    };\n    socket.emit('addRoom', room);\n  };\n  const cancelCreation = () => {\n    setIsCreatingRoom(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"availableRoom\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"room\",\n        children: availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: room.name\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"createRoom\",\n      children: isCreatingRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"createRoomForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"roomName\",\n          children: \"Room Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"roomName\",\n          name: \"roomName\",\n          value: roomName,\n          onChange: e => setRoomName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"joinBtn\",\n          onClick: handleJoinRoom,\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"cancelRoomBtn\",\n          onClick: cancelCreation,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"createRoomBtn\",\n        onClick: handleCreateRoom,\n        children: \"Create a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xFeUaZueJfL+XbuNz3vvT8xvmHQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","socket","setSocket","availableRooms","setAvailableRooms","roomName","setRoomName","isCreatingRoom","setIsCreatingRoom","isGameStarted","setIsGameStarted","score","setScore","io","require","connect","on","console","log","Date","toUTCString","id","data","length","disconnect","handleCreateRoom","handleJoinRoom","room","emit","cancelCreation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","htmlFor","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vemt/Projects/Simple_projects/quiz_socket_react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [socket, setSocket] = useState(null);\n  const [availableRooms, setAvailableRooms] = useState([]);\n  const [roomName, setRoomName] = useState('');\n  const [isCreatingRoom, setIsCreatingRoom] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [score, setScore] = useState(0);\n\n  useEffect(() =>{\n    const io = require('socket.io-client');\n    const socket = io.connect('http://localhost:8885');\n    setSocket(socket);\n\n    socket.on('connect', () => {\n      console.log('Connected to Socket.io server');\n      console.log('Time: ' + new Date().toUTCString());\n      console.log(socket.id);\n    });\n\n    socket.on('availableRoom', (data) => {\n      console.log('Available Rooms:');\n      console.log(data.availableRooms);\n      if (data.availableRooms && data.availableRooms.length > 0) {\n        setAvailableRooms(data.availableRooms);\n      } else {\n        setIsCreatingRoom(true);\n      }\n    });\n\n    return () => {\n      // Clean up the socket.io connection when the component unmounts\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleCreateRoom = () => {\n    setIsCreatingRoom(true);\n  };\n\n  const handleJoinRoom = () => {\n    const room = { roomName };\n    socket.emit('addRoom', room);\n  };\n\n  const cancelCreation = () => {\n    setIsCreatingRoom(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Real-Time Quiz Application</h2>\n      <div id=\"availableRoom\">\n        <h3>Available Room</h3>\n        <div id=\"room\">\n          {availableRooms.map((room) => (\n            <div key={room.id}>{room.name}</div>\n          ))}\n        </div>\n      </div>\n      <div id=\"createRoom\">\n        {isCreatingRoom ? (\n          <div id=\"createRoomForm\">\n            <label htmlFor=\"roomName\">Room Name:</label>\n            <input\n              type=\"text\"\n              id=\"roomName\"\n              name=\"roomName\"\n              value={roomName}\n              onChange={(e) => setRoomName(e.target.value)}\n              required\n            />\n            <button id=\"joinBtn\" onClick={handleJoinRoom}>\n              Join\n            </button>\n            <button id=\"cancelRoomBtn\" onClick={cancelCreation}>\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button id=\"createRoomBtn\" onClick={handleCreateRoom}>\n            Create a Room\n          </button>\n        )}\n      </div>\n      {/* Add the rest of your components and logic here */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}