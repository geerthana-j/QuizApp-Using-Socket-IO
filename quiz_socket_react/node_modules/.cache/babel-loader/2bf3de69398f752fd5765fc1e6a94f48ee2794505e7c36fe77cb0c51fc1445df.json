{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nouns = exports.adjectives = exports.uniqueUsernameGenerator = exports.generateUsername = exports.generateFromEmail = void 0;\nconst data_1 = require(\"./data\");\nconst crypto_1 = require(\"crypto\");\n// Function to generate a random number within a given range\nconst getRandomInt = (min, max) => {\n  const randomBuffer = (0, crypto_1.randomBytes)(4); // 4 bytes to generate a 32-bit integer\n  const randomInt = randomBuffer.readUInt32BE(0); // Convert bytes to an unsigned 32-bit integer\n  return min + randomInt % (max - min + 1);\n};\nconst randomNumber = maxNumber => {\n  let randomNumberString;\n  switch (maxNumber) {\n    case 1:\n      randomNumberString = Math.floor(getRandomInt(1, 9)).toString();\n      break;\n    case 2:\n      randomNumberString = Math.floor(getRandomInt(10, 90)).toString();\n      break;\n    case 3:\n      randomNumberString = Math.floor(getRandomInt(100, 900)).toString();\n      break;\n    case 4:\n      randomNumberString = Math.floor(getRandomInt(1000, 9000)).toString();\n      break;\n    case 5:\n      randomNumberString = Math.floor(getRandomInt(10000, 90000)).toString();\n      break;\n    case 6:\n      randomNumberString = Math.floor(getRandomInt(100000, 900000)).toString();\n      break;\n    default:\n      randomNumberString = \"\";\n      break;\n  }\n  return randomNumberString;\n};\nfunction generateFromEmail(email, randomDigits) {\n  // Retrieve name from email address\n  const nameParts = email.replace(/@.+/, \"\");\n  // Replace all special characters like \"@ . _ \";\n  const name = nameParts.replace(/[&/\\\\#,+()$~%._@'\":*?<>{}]/g, \"\");\n  // Create and return unique username\n  return name + randomNumber(randomDigits);\n}\nexports.generateFromEmail = generateFromEmail;\nfunction generateUsername(separator, randomDigits, length) {\n  const noun = data_1.nouns[Math.floor(Math.random() * data_1.nouns.length)];\n  const adjective = data_1.adjectives[Math.floor(Math.random() * data_1.adjectives.length)];\n  let username;\n  // Create unique username\n  if (separator) {\n    username = adjective + separator + noun + randomNumber(randomDigits);\n  } else {\n    username = adjective + noun + randomNumber(randomDigits);\n  }\n  if (length) {\n    return username.substring(0, length);\n  }\n  return username;\n}\nexports.generateUsername = generateUsername;\nfunction uniqueUsernameGenerator(config) {\n  if (!config.dictionaries) {\n    throw new Error(\"Cannot find any dictionary. Please provide at least one, or leave \" + \"the 'dictionary' field empty in the config object\");\n  } else {\n    const dictionariesLength = config.dictionaries.length;\n    let name = \"\";\n    for (let i = 0; i < dictionariesLength; i++) {\n      if (name && config.separator) {\n        if (config.separator) {\n          name = name + config.separator + config.dictionaries[i][Math.floor(getRandomInt(0, 1) * config.dictionaries[i].length)];\n        } else {\n          name = name + config.dictionaries[i][Math.floor(getRandomInt(0, 1) * config.dictionaries[i].length)];\n        }\n      } else {\n        name = config.dictionaries[i][Math.floor(getRandomInt(0, 1) * config.dictionaries[i].length)];\n      }\n    }\n    let username = name + randomNumber(config.randomDigits);\n    username = username.toLowerCase();\n    if (config.style === \"lowerCase\") {\n      username = username.toLowerCase();\n    } else if (config.style === \"capital\") {\n      const [firstLetter, ...rest] = username.split(\"\");\n      username = firstLetter.toUpperCase() + rest.join(\"\");\n    } else if (config.style === \"upperCase\") {\n      username = username.toUpperCase();\n    }\n    if (config.length) {\n      return username.substring(0, config.length);\n    } else {\n      return username.substring(0, 15);\n    }\n  }\n}\nexports.uniqueUsernameGenerator = uniqueUsernameGenerator;\nvar data_2 = require(\"./data\");\nObject.defineProperty(exports, \"adjectives\", {\n  enumerable: true,\n  get: function () {\n    return data_2.adjectives;\n  }\n});\nObject.defineProperty(exports, \"nouns\", {\n  enumerable: true,\n  get: function () {\n    return data_2.nouns;\n  }\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","nouns","adjectives","uniqueUsernameGenerator","generateUsername","generateFromEmail","data_1","require","crypto_1","getRandomInt","min","max","randomBuffer","randomBytes","randomInt","readUInt32BE","randomNumber","maxNumber","randomNumberString","Math","floor","toString","email","randomDigits","nameParts","replace","name","separator","length","noun","random","adjective","username","substring","config","dictionaries","Error","dictionariesLength","i","toLowerCase","style","firstLetter","rest","split","toUpperCase","join","data_2","enumerable","get"],"sources":["C:/Users/vemt/Projects/Simple_projects/quiz_socket_react/node_modules/unique-username-generator/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nouns = exports.adjectives = exports.uniqueUsernameGenerator = exports.generateUsername = exports.generateFromEmail = void 0;\nconst data_1 = require(\"./data\");\nconst crypto_1 = require(\"crypto\");\n// Function to generate a random number within a given range\nconst getRandomInt = (min, max) => {\n    const randomBuffer = (0, crypto_1.randomBytes)(4); // 4 bytes to generate a 32-bit integer\n    const randomInt = randomBuffer.readUInt32BE(0); // Convert bytes to an unsigned 32-bit integer\n    return min + (randomInt % (max - min + 1));\n};\nconst randomNumber = (maxNumber) => {\n    let randomNumberString;\n    switch (maxNumber) {\n        case 1:\n            randomNumberString = Math.floor(getRandomInt(1, 9)).toString();\n            break;\n        case 2:\n            randomNumberString = Math.floor(getRandomInt(10, 90)).toString();\n            break;\n        case 3:\n            randomNumberString = Math.floor(getRandomInt(100, 900)).toString();\n            break;\n        case 4:\n            randomNumberString = Math.floor(getRandomInt(1000, 9000)).toString();\n            break;\n        case 5:\n            randomNumberString = Math.floor(getRandomInt(10000, 90000)).toString();\n            break;\n        case 6:\n            randomNumberString = Math.floor(getRandomInt(100000, 900000)).toString();\n            break;\n        default:\n            randomNumberString = \"\";\n            break;\n    }\n    return randomNumberString;\n};\nfunction generateFromEmail(email, randomDigits) {\n    // Retrieve name from email address\n    const nameParts = email.replace(/@.+/, \"\");\n    // Replace all special characters like \"@ . _ \";\n    const name = nameParts.replace(/[&/\\\\#,+()$~%._@'\":*?<>{}]/g, \"\");\n    // Create and return unique username\n    return name + randomNumber(randomDigits);\n}\nexports.generateFromEmail = generateFromEmail;\nfunction generateUsername(separator, randomDigits, length) {\n    const noun = data_1.nouns[Math.floor(Math.random() * data_1.nouns.length)];\n    const adjective = data_1.adjectives[Math.floor(Math.random() * data_1.adjectives.length)];\n    let username;\n    // Create unique username\n    if (separator) {\n        username = adjective + separator + noun + randomNumber(randomDigits);\n    }\n    else {\n        username = adjective + noun + randomNumber(randomDigits);\n    }\n    if (length) {\n        return username.substring(0, length);\n    }\n    return username;\n}\nexports.generateUsername = generateUsername;\nfunction uniqueUsernameGenerator(config) {\n    if (!config.dictionaries) {\n        throw new Error(\"Cannot find any dictionary. Please provide at least one, or leave \" +\n            \"the 'dictionary' field empty in the config object\");\n    }\n    else {\n        const dictionariesLength = config.dictionaries.length;\n        let name = \"\";\n        for (let i = 0; i < dictionariesLength; i++) {\n            if (name && config.separator) {\n                if (config.separator) {\n                    name = name + config.separator + config.dictionaries[i][Math.floor(getRandomInt(0, 1) * config.dictionaries[i].length)];\n                }\n                else {\n                    name = name + config.dictionaries[i][Math.floor(getRandomInt(0, 1) * config.dictionaries[i].length)];\n                }\n            }\n            else {\n                name = config.dictionaries[i][Math.floor(getRandomInt(0, 1) * config.dictionaries[i].length)];\n            }\n        }\n        let username = name + randomNumber(config.randomDigits);\n        username = username.toLowerCase();\n        if (config.style === \"lowerCase\") {\n            username = username.toLowerCase();\n        }\n        else if (config.style === \"capital\") {\n            const [firstLetter, ...rest] = username.split(\"\");\n            username = firstLetter.toUpperCase() + rest.join(\"\");\n        }\n        else if (config.style === \"upperCase\") {\n            username = username.toUpperCase();\n        }\n        if (config.length) {\n            return username.substring(0, config.length);\n        }\n        else {\n            return username.substring(0, 15);\n        }\n    }\n}\nexports.uniqueUsernameGenerator = uniqueUsernameGenerator;\nvar data_2 = require(\"./data\");\nObject.defineProperty(exports, \"adjectives\", { enumerable: true, get: function () { return data_2.adjectives; } });\nObject.defineProperty(exports, \"nouns\", { enumerable: true, get: function () { return data_2.nouns; } });\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}